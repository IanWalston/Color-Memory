{"version":3,"sources":["components/colorball.js","components/display.js","App.js","index.js"],"names":["Circle","props","react_default","a","createElement","cx","loc","x","cy","y","r","radius","fill","color","onClick","click","Display","class","score","level","App","state","pickedcolors","balls","startingballs","shuffle","randompositions","Object","keys","positions","map","Math","random","sort","b","newballs","_this","ball","pop","setState","clickball","includes","alert","concat","_this2","this","display","viewBox","colorball","assign","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"kbAYeA,EAVA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,UACEC,GAAIJ,EAAMK,IAAIC,EACdC,GAAIP,EAAMK,IAAIG,EACdC,EAAGT,EAAMU,OACTC,KAAMX,EAAMY,MACZC,QAAS,kBAAIb,EAAMc,MAAMd,EAAMY,WCSpBG,EAfC,SAAAf,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKa,MAAM,gCACTf,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BACM,IACRF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,oBAAYH,EAAMiB,MAAlB,QACM,IACRhB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,oBAAYH,EAAMkB,QARtB,oBCgEaC,6MA1DbC,MAAQ,CACNH,MAAO,EACPI,aAAc,GACdH,MAAO,EACPI,MAAOC,KAGTC,QAAU,WAER,IAAMC,EAAkBC,OAAOC,KAAKC,GACjCC,IAAI,SAAA3B,GAAC,MAAI,CAAC4B,KAAKC,SAAU7B,KACzB8B,KAAK,SAAC9B,EAAG+B,GAAJ,OAAU/B,EAAE,GAAK+B,EAAE,KACxBJ,IAAI,SAAA3B,GAAC,OAAIA,EAAE,KAGRgC,EAAWC,EAAKf,MAAME,MAAMO,IAAI,SAAAO,GAEpC,OADAA,EAAK/B,IAAMuB,EAAUH,EAAgBY,OAC9BD,IAITD,EAAKG,SAAS,CAAEhB,MAAOY,OAGzBK,UAAY,SAAA3B,GACNuB,EAAKf,MAAMC,aAAamB,SAAS5B,IACnC6B,MAAM,yBACNN,EAAKG,SAAS,CAAEjB,aAAc,KAC9Bc,EAAKG,SAAS,CAAErB,MAAO,MAEvBkB,EAAKG,SAAS,CAAEjB,aAAcc,EAAKf,MAAMC,aAAaqB,OAAO,CAAC9B,MAC9DuB,EAAKG,SAAS,CAAErB,MAAOkB,EAAKf,MAAMH,MAAQ,IACjB,KAArBkB,EAAKf,MAAMH,QACbwB,MAAM,aACNN,EAAKG,SAAS,CAAEjB,aAAc,KAC9Bc,EAAKG,SAAS,CAAErB,MAAO,IACvBkB,EAAKG,SAAS,CAAEpB,MAAOiB,EAAKf,MAAMF,MAAQ,MAI9CiB,EAAKX,mFAGE,IAAAmB,EAAAC,KACP,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAD,CAAS5B,MAAO2B,KAAKxB,MAAMH,MAAOC,MAAO0B,KAAKxB,MAAMF,QAEpDjB,EAAAC,EAAAC,cAAA,OAAK2C,QAAQ,mBACVF,KAAKxB,MAAME,MAAMO,IAAI,SAAAO,GAAI,OACxBnC,EAAAC,EAAAC,cAAC4C,EAADrB,OAAAsB,OAAA,GAAYZ,EAAZ,CAAkBtB,MAAO6B,EAAKJ,wBAnDxBU,IAAMC,WCJxBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1d0cb59c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = props => (\n  <circle\n    cx={props.loc.x}\n    cy={props.loc.y}\n    r={props.radius}\n    fill={props.color}\n    onClick={()=>props.click(props.color)}\n  />\n);\n\nexport default Circle;\n","import React from \"react\";\n\nconst Display = props => (\n  <nav class=\"navbar navbar-light bg-light\">\n    <span>\n      <h1>Memory Balls</h1>\n    </span>{\" \"}\n    <span>\n      <h1>Score: {props.score}/12</h1>\n    </span>{\" \"}\n    <span>\n      <h1>Level: {props.level}</h1>\n    </span>\n    .\n  </nav>\n);\n\nexport default Display;\n","import React from \"react\";\n\nimport Circle from \"./components/colorball\";\nimport Display from \"./components/display\";\n\nimport positions from \"./positions.json\";\nimport startingballs from \"./startingballs.json\";\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    pickedcolors: [],\n    level: 1,\n    balls: startingballs\n  };\n\n  shuffle = () => {\n    //get an array of the 12 positions in random order\n    const randompositions = Object.keys(positions)\n      .map(a => [Math.random(), a])\n      .sort((a, b) => a[0] - b[0])\n      .map(a => a[1]);\n\n    //mutate copy of balls with random positions\n    const newballs = this.state.balls.map(ball => {\n      ball.loc = positions[randompositions.pop()];\n      return ball;\n    });\n\n    //set state balls to copy\n    this.setState({ balls: newballs });\n  };\n\n  clickball = color => {\n    if (this.state.pickedcolors.includes(color)) {\n      alert(\"bitch, you dun goofed\");\n      this.setState({ pickedcolors: [] });\n      this.setState({ score: 0 });\n    } else {\n      this.setState({ pickedcolors: this.state.pickedcolors.concat([color]) });\n      this.setState({ score: this.state.score + 1 });\n      if (this.state.score === 12) {\n        alert(\"great job\");\n        this.setState({ pickedcolors: [] });\n        this.setState({ score: 0 });\n        this.setState({ level: this.state.level + 1 });\n      }\n    }\n\n    this.shuffle();\n  };\n\n  render() {\n    return (\n      <div>\n        <Display score={this.state.score} level={this.state.level} />\n\n        <svg viewBox=\"0 0 841.9 595.3\">\n          {this.state.balls.map(ball => (\n            <Circle {...ball} click={this.clickball} />\n          ))}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}